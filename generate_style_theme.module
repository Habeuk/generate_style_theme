<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\generate_style_theme\Entity\ConfigThemeEntity;
use Drupal\Core\Entity\EntityInterface;
use Stephane888\Debug\debugLog;
use Drupal\generate_style_theme\Services\GenerateStyleTheme;
use Drupal\generate_style_theme\SectionStorageHelp;
use Drupal\generate_style_theme\GenerateStyleTheme as GenerateStyleThemeHook;

/**
 *
 * @file
 * Primary module hooks for Generate style theme module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

/**
 * implement hook_form_FORM_ID_alter
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param string $form_id
 */
function generate_style_theme_form_config_theme_entity_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!empty($form['hostname']['widget'][0]['value'])) {
    $form['hostname']['widget'][0]['value']['#ajax'] = [
      'callback' => '_generate_style_theme_siteconfig_alter',
      'event' => 'change',
      'wrapper' => 'wbumenudomain-siteconfig',
      'progress' => [
        'type' => 'throbber',
        'message' => t('Mise à jour des données ...')
      ],
      'disable-refocus' => FALSE
    ];
  }
  //
  $form['actions']['submit']['#submit'][] = [
    '\Drupal\generate_style_theme\Services\FinnaliseTheme',
    'AfterFileThemeGenerate'
  ];
  // debugLog::kintDebugDrupal(\Drupal::config('system.theme'), 'system.theme');
  // $configs = [
  // 'themeName' => 'essaie'
  // ];
  // $StyleTheme = new GenerateStyleTheme($configs);
  // exec("export PATH=/usr/local/bin && npm -v", $output, $rt);
  //
  //
  // $output = '';
  // $output = shell_exec('npm -v');
  // dump($output);
  // $key = 'core.entity_view_display.block_content.layout_entete_m1.default';
  // $ht = \Drupal::config($key)->getRawData();
  // dump($ht['third_party_settings']['layout_builder']['sections'][0]);
  // ////////////////
  // $form = \Drupal::formBuilder();
  // $form_arg = "\Drupal\layout_builder\Form\ConfigureSectionForm";
  // SectionStorageHelp::getSectionStorage();
  // $form['setion_wbu_custom'] = $form->getForm($form_arg, 'block_content.layout_entete_m1.default', 0);
  // $form['setion_wbu_custom'] = $form->getForm($form_arg, SectionStorageHelp::getSectionStorage(), 0);
}

function _generate_style_theme_siteconfig_alter($form, FormStateInterface $form_state) {
  return $form['site_config']['widget'][0]['siteconf']['container'];
}

/**
 * Met à jour les informations du theme.
 *
 * @param ConfigThemeEntity $entity
 */
function generate_style_theme_config_theme_entity_update(ConfigThemeEntity $entity) {
  $configs = [
    'themeName' => $entity->getHostname()
  ];
  $StyleTheme = new GenerateStyleTheme($configs, $entity);
  $StyleTheme->buildSubTheme();
}

/**
 * Cree un nouveau theme.
 *
 * @param ConfigThemeEntity $entity
 */
function generate_style_theme_config_theme_entity_insert(ConfigThemeEntity $entity) {
  $configs = [
    'themeName' => $entity->getHostname()
  ];
  $StyleTheme = new GenerateStyleTheme($configs, $entity);
  $StyleTheme->buildSubTheme(true);
}

/**
 * Implements hook_theme().
 */
function generate_style_theme_theme($existing, $type, $theme, $path) {
  return GenerateStyleThemeHook::getThemeHooks();
}


