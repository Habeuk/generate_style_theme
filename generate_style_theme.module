<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\generate_style_theme\Entity\ConfigThemeEntity;
use Drupal\Core\Entity\EntityInterface;
use Drupal\generate_style_theme\Services\GenerateStyleTheme;
use Drupal\generate_style_theme\SectionStorageHelp;
use Drupal\generate_style_theme\GenerateStyleTheme as GenerateStyleThemeHook;
use Symfony\Component\HttpFoundation\Request;

/**
 *
 * @file
 * Primary module hooks for Generate style theme module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

/**
 * implement hook_form_FORM_ID_alter
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param string $form_id
 */
function generate_style_theme_form_config_theme_entity_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /**
   *
   * @delete before 2x
   * ( sauf la fin avec ...AfterFileThemeGenerate )
   */
  $request = Drupal::request();
  $query = $request->query->all();
  // fullfile field with parametter
  if (!empty($query['lirairy']) && isset($form['lirairy']['widget'])) {
    $form['lirairy']['widget']['#default_value'] = [
      $query['lirairy']
    ];
  }
  
  if (!empty($query['domaine-id']) && isset($form['hostname']['widget'][0])) {
    $form['hostname']['widget'][0]['value']['#default_value'] = $query['domaine-id'];
  }
  
  if (!empty($query['content-type-home-id']) && isset($form['site_config']['widget'][0]['siteconf']['container'])) {
    $form['site_config']['widget'][0]['siteconf']['container']['page.front']['#default_value'] = '/node/' . $query['content-type-home-id'];
  }
  //
  if (!empty($form['hostname']['widget'][0]['value'])) {
    $form['hostname']['widget'][0]['value']['#ajax'] = [
      'callback' => '_generate_style_theme_siteconfig_alter',
      'event' => 'change',
      'wrapper' => 'wbumenudomain-siteconfig',
      'progress' => [
        'type' => 'throbber',
        'message' => t('Mise à jour des données ...')
      ],
      'disable-refocus' => FALSE
    ];
  }
  
  //
  $form['actions']['submit']['#submit'][] = [
    '\Drupal\generate_style_theme\Services\FinnaliseTheme',
    'AfterFileThemeGenerate'
  ];
}

/**
 *
 * @param unknown $form
 * @param FormStateInterface $form_state
 * @return []
 */
function _generate_style_theme_siteconfig_alter($form, FormStateInterface $form_state) {
  $field = [];
  if (!empty($form['site_config']['widget'][0]['siteconf']['container']))
    $field = $form['site_config']['widget'][0]['siteconf']['container'];
  else {
    $field = $form['site_config']['widget'];
  }
  return $field;
}

/**
 * Met à jour les informations du theme.
 *
 * @param ConfigThemeEntity $entity
 */
function generate_style_theme_config_theme_entity_update(ConfigThemeEntity $entity) {
  $StyleTheme = new GenerateStyleTheme($entity);
  $StyleTheme->buildSubTheme();
}

/**
 * Cree un nouveau theme.
 *
 * @param ConfigThemeEntity $entity
 */
function generate_style_theme_config_theme_entity_insert(ConfigThemeEntity $entity) {
  $StyleTheme = new GenerateStyleTheme($entity);
  $StyleTheme->buildSubTheme(true);
}

/**
 * Implements hook_theme().
 */
function generate_style_theme_theme($existing, $type, $theme, $path) {
  return GenerateStyleThemeHook::getThemeHooks();
}

/**
 * Pour Ajouter les onglets permettant l'edition d'un contenu affiché en mode
 * default.
 * NB:
 * Cette logique doit etre limiter au node.
 *
 * @param array $variables
 */
function generate_style_theme_preprocess_node(&$variables) {
  $entityNodeRoute = 'entity.node.canonical';
  $entityFormEdit = 'entity.node.edit_form';
  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  // dump($variables);
  if (!$variables['page'] && $variables['view_mode'] == 'default' && !empty($user) && in_array('administrator', $user->getRoles())) {
    $request = \Drupal::request();
    $destination = $request->getRequestUri();
    /**
     *
     * @var \Drupal\Node\Entity\node $node
     */
    $node = $variables['elements']['#node'];
    $variables['content']['onglets'] = [
      '#theme' => 'menu_local_tasks',
      '#weight' => -40,
      '#secondary' => [
        [
          "#theme" => "menu_local_task",
          '#link' => [
            'title' => 'Voir',
            'url' => \Drupal\Core\Url::fromRoute($entityNodeRoute, [
              'node' => $node->id()
            ]),
            'localized_options' => []
          ],
          "#active" => true,
          "#weight" => 100,
          '#access' => true
        ],
        [
          "#theme" => "menu_local_task",
          '#link' => [
            'title' => 'Modifier',
            'url' => \Drupal\Core\Url::fromRoute($entityFormEdit, [
              'node' => $node->id()
            ], [
              'query' => array(
                'destination' => $destination
              )
            ]),
            'localized_options' => []
          ],
          "#active" => false,
          "#weight" => 100,
          '#access' => true
        ]
      ]
    ];
  }
}






